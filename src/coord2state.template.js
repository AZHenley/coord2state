/**
 * state-lookup.js
 * Generated by build_state_lookup.py
 * Simplified US state boundaries with point-in-polygon lookup.
 */

// ——————————————————————————————————————————————————————————————————————
// The generated GeoJSON:
const statesGeo = {geojson};
// ——————————————————————————————————————————————————————————————————————

const stateIndex = statesGeo.features.map(f => ({
  code: f.properties.STUSPS,
  coords: f.geometry.coordinates
}));

function pointInPoly(lon, lat, coords) {
  if (Array.isArray(coords[0][0][0])) {
    return coords.some(poly => pointInPoly(lon, lat, poly));
  }
  let inside = false;
  for (let ring of coords) {
    for (let i = 0, j = ring.length - 1; i < ring.length; j = i++) {
      const xi = ring[i][0], yi = ring[i][1];
      const xj = ring[j][0], yj = ring[j][1];
      const intersect = ((yi > lat) !== (yj > lat)) &&
        (lon < (xj - xi) * (lat - yi) / (yj - yi) + xi);
      if (intersect) inside = !inside;
    }
  }
  return inside;
}

function getState(lat, lon) {
  for (const { code, coords } of stateIndex) {
    if (pointInPoly(lon, lat, coords)) return code;
  }
  return null;
}

if (typeof window !== 'undefined') {
  window.getState = getState;
}
